function setUpModel(){let e=sessionStorage.getItem("gameData");console.log(e),e=JSON.parse(e),console.log(e);const t=e.allUserData.map((e=>[e.total_deaths,e.total_eggs,e.total_plays,e.total_session_duration,e.opened_inventory,e.damage_taken])),o=e.allUserData.map((e=>e.win>0?1:0)),n=tf.tensor2d(t),a=tf.tensor2d(o,[o.length,1]),s=tf.sequential();return s.add(tf.layers.dense({units:1,activation:"sigmoid",inputShape:[t[0].length]})),s.compile({loss:"binaryCrossentropy",optimizer:tf.train.adam(),metrics:["accuracy"]}),{inputTensor:n,labelTensor:a,model:s}}export async function trainModel(){try{const{inputTensor:e,labelTensor:t,model:o}=setUpModel();console.log("trainmodel",e,t),await o.fit(e,t,{epochs:100,batchSize:32}),console.log("Trained the model");const n=o.predict(e).dataSync();return console.log("predictions",n),n}catch(e){return console.error("error MODEL",e),[]}}