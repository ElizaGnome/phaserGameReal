(()=>{"use strict";function e(){console.log("Loading assets..."),this.load.image("background","assets/base.png"),this.load.spritesheet("characterWalkRight","assets/walk_sprite_sheet.png",{frameWidth:65,frameHeight:66}),this.load.spritesheet("characterWalkLeft","assets/left_walk_sprite_sheet.png",{frameWidth:65,frameHeight:66}),this.load.spritesheet("characterJumpRight","assets/jump_sprite_sheet.png",{frameWidth:64,frameHeight:70}),this.load.spritesheet("characterJumpLeft","assets/left_jump_sprite_sheet.png",{frameWidth:64,frameHeight:70}),this.load.spritesheet("characterRunLeft","assets/left_run_sprite_sheet.png",{frameWidth:70,frameHeight:70}),this.load.spritesheet("characterRunRight","assets/run_sprite_sheet.png",{frameWidth:70,frameHeight:70}),this.load.image("egg","assets/place_holder.png"),this.load.image("ground","assets/ground.png")}function a(e,a){a.destroy(),console.log("Item collected!")}class t extends Phaser.Scene{constructor(){super({key:"MainScene"})}preload(){e.call(this)}create(){var e;(e=this).anims.create({key:"characterRunRight",frames:e.anims.generateFrameNumbers("characterRunRight",{start:0,end:8}),frameRate:7,repeat:-1}),e.anims.create({key:"characterRunLeft",frames:e.anims.generateFrameNumbers("characterRunLeft",{start:0,end:8}),frameRate:7,repeat:-1}),e.anims.create({key:"characterWalkRight",frames:e.anims.generateFrameNumbers("characterWalkRight",{start:0,end:10}),frameRate:7,repeat:-1}),e.anims.create({key:"characterWalkLeft",frames:e.anims.generateFrameNumbers("characterWalkLeft",{start:0,end:10}),frameRate:7,repeat:-1}),e.anims.create({key:"characterJumpRight",frames:[{key:"characterJumpRight",frame:0},{key:"characterJumpRight",frame:1},{key:"characterJumpRight",frame:2},{key:"characterJumpRight",frame:2},{key:"characterJumpRight",frame:2},{key:"characterJumpRight",frame:3},{key:"characterJumpRight",frame:4},{key:"characterJumpRight",frame:5},{key:"characterJumpRight",frame:6}],frameRate:10,repeat:0}),e.anims.create({key:"characterJumpLeft",frames:[{key:"characterJumpLeft",frame:0},{key:"characterJumpLeft",frame:1},{key:"characterJumpLeft",frame:2},{key:"characterJumpLeft",frame:2},{key:"characterJumpLeft",frame:2},{key:"characterJumpLeft",frame:3},{key:"characterJumpLeft",frame:4},{key:"characterJumpLeft",frame:5},{key:"characterJumpLeft",frame:6}],frameRate:10,repeat:0}),function(e){const t=e.physics.add.staticSprite(512,550,"ground");t.setScale(2),t.refreshBody(),e.physics.add.collider(e.character,t),e.physics.add.overlap(e.character,e.items,a,null,e)}(this),this.character=this.physics.add.sprite(100,300,"characterWalkRight").setOrigin(.5,.5),this.character.setScale(1.5),this.character.setCollideWorldBounds(!0),this.character.setBounce(.2),this.items=this.physics.add.staticGroup(),this.items.create(200,504,"egg"),this.items.create(400,504,"egg"),this.items.create(600,504,"egg"),this.cursors=this.input.keyboard.createCursorKeys(),this.spaceBar=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),this.shift=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT),this.isJumping=!1,this.facingDirection=2}update(){this.facingDirection=function(e){let a=2;return e.character.setVelocityX(0),e.character.body.touching.down&&!e.spaceBar.isDown&&(e.cursors.right.isDown?(e.character.setVelocityX(e.shift.isDown?400:200),e.character.anims.play(e.shift.isDown?"characterRunRight":"characterWalkRight",!0),a=2):e.cursors.left.isDown?(e.character.setVelocityX(e.shift.isDown?-400:-200),e.character.anims.play(e.shift.isDown?"characterRunLeft":"characterWalkLeft",!0),a=1):e.character.anims.stop()),a}(this),this.facingDirection=function(e,a,t){let r=2;return e.spaceBar.isDown&&e.character.body.touching.down?(e.character.setVelocityY(-500),e.isJumping=!0,e.cursors.left.isDown?(e.character.setVelocityX(-200),r=1,e.character.anims.play("characterJumpLeft",!0)):e.cursors.right.isDown?(e.character.setVelocityX(t),r=2,e.character.anims.play("characterJumpRight",!0)):e.character.anims.play(1===r?"characterJumpLeft":"characterJumpRight",!0)):e.character.body.touching.down||(e.cursors.left.isDown?(e.character.setVelocityX(-200),r=1,e.character.anims.play("characterJumpLeft",!0)):e.cursors.right.isDown?(e.character.setVelocityX(t),r=2,e.character.anims.play("characterJumpRight",!0)):e.character.anims.play(1===r?"characterJumpLeft":"characterJumpRight",!0)),r}(this,0,200)}}const r={type:Phaser.AUTO,width:1024,height:576,physics:{default:"arcade",arcade:{gravity:{y:400},debug:!1}},scene:[t]};new Phaser.Game(r)})();